A simple optimal control example
================================

We illustrate how to use ozone to solve an optimal control problem - the Brachistochrone problem.
We seek to find the curve along which a ball rolls from one point to another in the shortest amount of time.
We minimize the final time, :math:`t_f`, by varying the dynamic control, :math:`\theta`, subject to the dynamics,

.. math ::
  \frac{\partial x}{\partial t} &= v \sin(\theta) \\
  \frac{\partial y}{\partial t} &= v \cos(\theta) \\
  \frac{\partial v}{\partial t} &= g \cos(\theta). \\

The initial conditions are

.. math ::
  x(0) &= 0 \\
  y(0) &= 0 \\
  v(0) &= 0, \\

and the transversality constraints are

.. math ::
  x(t_f) &= 2.0 \\
  y(t_f) &= -2.0 \\

Here, we use the 6th order Gauss--Legendre collocation method with 20 time steps.

1. Defining the system
----------------------

Here, our ODE function is defined by a single OpenMDAO system, an :code:`ExplicitComponent`.

.. embed-module :: ozone.tests.ode_function_library.getting_started_oc_sys

2. Defining the ODE function class
----------------------------------

Here, we define the :code:`ODEFunction`, where we declare the 3 states and the control variable,
which is called a parameter in :code:`ODEFunction`.

.. embed-module :: ozone.tests.ode_function_library.getting_started_oc_func

3. Building the integration model and running
---------------------------------------------

Here, we pass call :code:`ODEIntegrator` to build our integration model and run it.
The run script and resulting plot are shown below.

.. embed-test-plot :: ozone.tests.doc_tests.test_getting_started , Test , test_oc , 80
